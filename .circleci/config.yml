# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.15
      - image: circleci/mariadb:10.3.13
        environment:
          #MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: narnia_app
          MYSQL_ROOT_PASSWORD: 123456
          #MYSQL_ROOT_HOST: "127.0.0.1"
      - image: circleci/redis:5.0.5
         #enviroment:
          
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo



    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - run: 
          name: "Setup custom environment variables"
          command: |
            echo 'export MySQL_PASSWORD="123456"' >> $BASH_ENV # Redirect MY_ENV_VAR into $BASH_ENV
            echo 'export WEI_XIN_APP_ID="123456"' >> $BASH_ENV

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test

  deploy:  
    machine:
      timezone:
        Asia/Shanghai # 设置上海时区
      enabled: true
    working_directory: ~/repo
    steps:
    - run: echo "====================部署开始=============================="
    - run:
        name: Deploy Over SSH
        command: |
          ssh dev@39.96.63.143 "cd ~/narnia_node_server npm stop git pull npm install --production npx sequelize db:migrate --env=production"
    - run: echo "====================部署完毕=============================="
  
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy

